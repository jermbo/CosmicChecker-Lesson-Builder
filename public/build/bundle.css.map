{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../App.svelte",
    "../../TyperLesson.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import TyperLesson from \"Comps/TyperLesson.svelte\";\n</script>\n\n<style lang=\"scss\" global>:global(*),\n:global(*:before),\n:global(*:after) {\n  box-sizing: border-box; }\n\n:global(html),\n:global(body) {\n  position: relative;\n  width: 100%;\n  height: 100%;\n  padding: 0; }\n\n:global(body) {\n  color: #333;\n  margin: 0; }\n\n:global(a) {\n  color: #0064c8;\n  text-decoration: none; }\n  :global(a:hover) {\n    text-decoration: underline; }\n  :global(a:visited) {\n    color: #0050a0; }\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9BcHAuc3ZlbHRlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7RUFHRSxzQkFBc0IsRUFBRTs7QUFFMUI7O0VBRUUsa0JBQWtCO0VBQ2xCLFdBQVc7RUFDWCxZQUFZO0VBQ1osVUFBVSxFQUFFOztBQUVkO0VBQ0UsV0FBVztFQUNYLFNBQVMsRUFBRTs7QUFFYjtFQUNFLGNBQWM7RUFDZCxxQkFBcUIsRUFBRTtFQUN2QjtJQUNFLDBCQUEwQixFQUFFO0VBQzlCO0lBQ0UsY0FBYyxFQUFFIiwiZmlsZSI6InNyYy9BcHAuc3ZlbHRlIiwic291cmNlc0NvbnRlbnQiOlsiKixcbio6YmVmb3JlLFxuKjphZnRlciB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IH1cblxuaHRtbCxcbmJvZHkge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIHBhZGRpbmc6IDA7IH1cblxuYm9keSB7XG4gIGNvbG9yOiAjMzMzO1xuICBtYXJnaW46IDA7IH1cblxuYSB7XG4gIGNvbG9yOiAjMDA2NGM4O1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7IH1cbiAgYTpob3ZlciB7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7IH1cbiAgYTp2aXNpdGVkIHtcbiAgICBjb2xvcjogIzAwNTBhMDsgfVxuXG4vKiMgc291cmNlTWFwcGluZ1VSTD1BcHAuc3ZlbHRlLmNzcy5tYXAgKi8iXX0= */</style>\n\n<main>\n  <TyperLesson />\n</main>\n",
    "<script>\n  const API_URL = \"http://localhost:5001/typer/lessons\";\n\n  const CATEGORY_TYPES = [\"html-css\", \"general\"];\n  const DIFFICULTY_TYPES = [\"easy\", \"medium\", \"hard\"];\n  const LESSON_TYPES = [\"dom\", \"style\"];\n\n  let lesson = {\n    title: \"\",\n    category: \"html-css\",\n    difficulty: \"\",\n    hasCompleted: false,\n    steps: []\n  };\n\n  function typingLesson({ target }) {\n    const val = target.value.split(\"\\n\");\n    lesson.steps = val;\n  }\n  function codeLesson(e) {\n    const target = e.target;\n    const val = target.value.split(\"\\n\");\n    const index = +target.dataset.index;\n    lesson.steps[index].action = val;\n  }\n  function addStep() {\n    const newStep = {\n      type: \"\",\n      desc: \"\",\n      action: [\"\"],\n      render: true\n    };\n    lesson.steps = [...lesson.steps, newStep];\n  }\n  function removeStep(index) {\n    const remove = lesson.steps.splice(index, 1);\n    lesson.steps = lesson.steps;\n  }\n</script>\n\n<style lang=\"scss\">.form-wrapper {\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column; }\n\npre {\n  max-width: 50vw;\n  overflow: auto; }\n\n/*# sourceMappingURL=TyperLesson.svelte.css.map */</style>\n\n<div class=\"form-wrapper\">\n  <h1>Lesson Builder</h1>\n  <div>\n    <div>\n      <label for=\"title\">Title</label>\n      <input id=\"title\" type=\"text\" bind:value={lesson.title} />\n    </div>\n\n    <div>\n      <label for=\"category\">Category</label>\n      <select\n        id=\"category\"\n        bind:value={lesson.category}\n        on:change={() => (lesson.steps = [])}>\n        <option value=\"\">Select a category</option>\n        {#each CATEGORY_TYPES as type}\n          <option value={type}>{type}</option>\n        {/each}\n      </select>\n    </div>\n\n    <div>\n      <label for=\"difficulty\">Difficulty</label>\n      <select id=\"difficulty\" bind:value={lesson.difficulty}>\n        <option value=\"\">Select a difficulty</option>\n        {#each DIFFICULTY_TYPES as type}\n          <option value={type}>{type}</option>\n        {/each}\n      </select>\n    </div>\n\n    {#if lesson.category == 'general'}\n      <label for=\"typeSteps\">Steps</label>\n      <textarea on:input={typingLesson} id=\"typeSteps\" cols=\"30\" rows=\"10\" />\n    {/if}\n\n    {#if lesson.category == 'html-css'}\n      <br />\n      <hr />\n      <button on:click={addStep}>Add New Step</button>\n      <br />\n      {#each lesson.steps as step, i}\n        <div class=\"stepGroup\">\n          <div>\n            <label for=\"difficulty\">Difficulty</label>\n            <select id=\"difficulty\" bind:value={lesson.steps[i].type}>\n              <option value=\"\">Select a type</option>\n              {#each LESSON_TYPES as type}\n                <option value={type}>{type}</option>\n              {/each}\n            </select>\n          </div>\n\n          <div>\n            <label for=\"desc\">Lesson Desc</label>\n            <input id=\"desc\" type=\"text\" bind:value={lesson.steps[i].desc} />\n          </div>\n\n          <div>\n            <label for=\"lessonStep\">Steps</label>\n            <textarea\n              on:input={codeLesson}\n              data-index={i}\n              id=\"lessonStep\"\n              cols=\"30\"\n              rows=\"10\" />\n          </div>\n\n          <button on:click={() => removeStep(i)}>Remove Step {i + 1}</button>\n        </div>\n      {/each}\n    {/if}\n\n  </div>\n  <div class=\"lesson-output\">\n    <h5>Lesson output</h5>\n    <pre>{JSON.stringify(lesson, null, 2)}</pre>\n  </div>\n</div>\n"
  ],
  "names": [],
  "mappings": "AAIkC,CAAC,AAAC,CAC5B,QAAQ,AAAC,CACT,OAAO,AAAE,CAAC,AAChB,UAAU,CAAE,UAAU,AAAE,CAAC,AAEnB,IAAI,AAAC,CACL,IAAI,AAAE,CAAC,AACb,QAAQ,CAAE,QAAQ,CAClB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,CAAC,AAAE,CAAC,AAEP,IAAI,AAAE,CAAC,AACb,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,CAAC,AAAE,CAAC,AAEN,CAAC,AAAE,CAAC,AACV,KAAK,CAAE,OAAO,CACd,eAAe,CAAE,IAAI,AAAE,CAAC,AAChB,OAAO,AAAE,CAAC,AAChB,eAAe,CAAE,SAAS,AAAE,CAAC,AACvB,SAAS,AAAE,CAAC,AAClB,KAAK,CAAE,OAAO,AAAE,CAAC;ACcF,aAAa,cAAC,CAAC,AAChC,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,KAAK,CACb,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,MAAM,CACvB,WAAW,CAAE,MAAM,CACnB,cAAc,CAAE,MAAM,AAAE,CAAC,AAE3B,GAAG,cAAC,CAAC,AACH,SAAS,CAAE,IAAI,CACf,QAAQ,CAAE,IAAI,AAAE,CAAC"
}